// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton_submission1/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:convert' as _i39;
import 'dart:typed_data' as _i41;

import 'package:core/core.dart' as _i12;
import 'package:dartz/dartz.dart' as _i3;
import 'package:data_connection_checker/data_connection_checker.dart' as _i7;
import 'package:ditonton_submission1/features/movies/data/datasources/db/movie_database_helper.dart'
    as _i35;
import 'package:ditonton_submission1/features/movies/data/datasources/movie_local_data_source.dart'
    as _i42;
import 'package:ditonton_submission1/features/movies/data/datasources/movie_remote_data_source.dart'
    as _i17;
import 'package:ditonton_submission1/features/movies/data/models/movie_detail_model.dart'
    as _i5;
import 'package:ditonton_submission1/features/movies/domain/usecases/get_movie_detail.dart'
    as _i21;
import 'package:ditonton_submission1/features/movies/domain/usecases/get_movie_recommendations.dart'
    as _i22;
import 'package:ditonton_submission1/features/movies/domain/usecases/get_watchlist_movies.dart'
    as _i26;
import 'package:ditonton_submission1/features/movies/domain/usecases/get_watchlist_status_movie.dart'
    as _i23;
import 'package:ditonton_submission1/features/movies/domain/usecases/remove_watchlist_movie.dart'
    as _i25;
import 'package:ditonton_submission1/features/movies/domain/usecases/save_watchlist_movie.dart'
    as _i24;
import 'package:ditonton_submission1/features/movies/domain/usecases/search_movies.dart'
    as _i27;
import 'package:ditonton_submission1/features/tv/data/datasources/db/tv_database_helper.dart'
    as _i37;
import 'package:ditonton_submission1/features/tv/data/datasources/tv_local_data_source.dart'
    as _i43;
import 'package:ditonton_submission1/features/tv/data/datasources/tv_remote_data_source.dart'
    as _i19;
import 'package:ditonton_submission1/features/tv/data/models/tv_detail_model.dart'
    as _i6;
import 'package:ditonton_submission1/features/tv/domain/usecases/get_tv_detail.dart'
    as _i29;
import 'package:ditonton_submission1/features/tv/domain/usecases/get_tv_recommendations.dart'
    as _i30;
import 'package:ditonton_submission1/features/tv/domain/usecases/get_watchlist_status_tv.dart'
    as _i32;
import 'package:ditonton_submission1/features/tv/domain/usecases/get_watchlist_tv.dart'
    as _i31;
import 'package:ditonton_submission1/features/tv/domain/usecases/remove_watchlist_tv.dart'
    as _i34;
import 'package:ditonton_submission1/features/tv/domain/usecases/save_watchlist_tv.dart'
    as _i33;
import 'package:ditonton_submission1/features/tv/domain/usecases/search_tv.dart'
    as _i28;
import 'package:home/data/models/movie_model.dart' as _i18;
import 'package:home/data/models/tv_model.dart' as _i20;
import 'package:home/domain/entities/movie.dart' as _i13;
import 'package:home/domain/entities/movie_detail.dart' as _i15;
import 'package:home/domain/entities/tv.dart' as _i14;
import 'package:home/domain/entities/tv_detail.dart' as _i16;
import 'package:home/domain/repository/movie_repository.dart' as _i2;
import 'package:home/domain/repository/tv_repository.dart' as _i4;
import 'package:home/home.dart' as _i10;
import 'package:http/io_client.dart' as _i8;
import 'package:http/src/base_request.dart' as _i38;
import 'package:http/src/response.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i40;
import 'package:sqflite/sqflite.dart' as _i36;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieRepository_0 extends _i1.SmartFake
    implements _i2.MovieRepository {
  _FakeMovieRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvRepository_2 extends _i1.SmartFake implements _i4.TvRepository {
  _FakeTvRepository_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_3 extends _i1.SmartFake
    implements _i5.MovieDetailResponse {
  _FakeMovieDetailResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_4 extends _i1.SmartFake
    implements _i6.TvDetailResponse {
  _FakeTvDetailResponse_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_5 extends _i1.SmartFake implements Duration {
  _FakeDuration_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAddressCheckResult_6 extends _i1.SmartFake
    implements _i7.AddressCheckResult {
  _FakeAddressCheckResult_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOStreamedResponse_7 extends _i1.SmartFake
    implements _i8.IOStreamedResponse {
  _FakeIOStreamedResponse_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_8 extends _i1.SmartFake implements _i9.Response {
  _FakeResponse_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i10.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i10.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [GetTopRatedTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTv extends _i1.Mock implements _i10.GetTopRatedTv {
  MockGetTopRatedTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i2.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>
  getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>>.value(
                  _FakeEither_1<_i12.Failure, _i15.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>
  getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> saveWatchlist(
    _i15.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [movie]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [movie]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> removeWatchlist(
    _i15.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);

  @override
  _i11.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>
  getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#getWatchlistMovies, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i4.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#getOnTheAirTv, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#getPopularTv, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#getTopRatedTv, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>>.value(
                  _FakeEither_1<_i12.Failure, _i16.TvDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> searchTv(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#searchTv, [query]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> getWatchlistTv() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTv, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#getWatchlistTv, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> saveWatchlist(
    _i16.TvDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [tv]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [tv]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> removeWatchlist(
    _i16.TvDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i17.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i18.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<_i5.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i11.Future<_i5.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_3(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i11.Future<_i5.MovieDetailResponse>);

  @override
  _i11.Future<List<_i18.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i19.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i20.TvModel>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<_i6.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i11.Future<_i6.TvDetailResponse>.value(
              _FakeTvDetailResponse_4(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i11.Future<_i6.TvDetailResponse>);

  @override
  _i11.Future<List<_i20.TvModel>> searchTv(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i12.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i21.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>>.value(
                  _FakeEither_1<_i12.Failure, _i15.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, _i15.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i22.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [GetWatchListStatusMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusMovie extends _i1.Mock
    implements _i23.GetWatchListStatusMovie {
  MockGetWatchListStatusMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);
}

/// A class which mocks [SaveWatchlistMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistMovie extends _i1.Mock
    implements _i24.SaveWatchlistMovie {
  MockSaveWatchlistMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> execute(
    _i15.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistMovie extends _i1.Mock
    implements _i25.RemoveWatchlistMovie {
  MockRemoveWatchlistMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> execute(
    _i15.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i26.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i27.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>> execute(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i13.Movie>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i13.Movie>>>);
}

/// A class which mocks [SearchTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTv extends _i1.Mock implements _i28.SearchTv {
  MockSearchTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> execute(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i29.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>>.value(
                  _FakeEither_1<_i12.Failure, _i16.TvDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, _i16.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i30.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [GetWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTv extends _i1.Mock implements _i31.GetWatchListTv {
  MockGetWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [GetWatchListStatusTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTv extends _i1.Mock
    implements _i32.GetWatchListStatusTv {
  MockGetWatchListStatusTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);
}

/// A class which mocks [SaveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTv extends _i1.Mock implements _i33.SaveWatchlistTv {
  MockSaveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> execute(_i16.TvDetail? tv) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tv]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [tv]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTv extends _i1.Mock implements _i34.RemoveWatchlistTv {
  MockRemoveWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, String>> execute(_i16.TvDetail? tv) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tv]),
            returnValue: _i11.Future<_i3.Either<_i12.Failure, String>>.value(
              _FakeEither_1<_i12.Failure, String>(
                this,
                Invocation.method(#execute, [tv]),
              ),
            ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, String>>);
}

/// A class which mocks [MovieDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDatabaseHelper extends _i1.Mock
    implements _i35.MovieDatabaseHelper {
  MockMovieDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i36.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i11.Future<_i36.Database?>.value(),
          )
          as _i11.Future<_i36.Database?>);

  @override
  _i11.Future<void> insertCacheTransaction(
    List<_i10.MovieTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCacheTransaction, [movies, category]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getCacheMovies, [category]),
            returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i11.Future<List<Map<String, dynamic>>>);

  @override
  _i11.Future<int> clearCache(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, [category]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<int> insertWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<int> removeWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i11.Future<Map<String, dynamic>?>.value(),
          )
          as _i11.Future<Map<String, dynamic>?>);

  @override
  _i11.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i11.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDatabaseHelper extends _i1.Mock implements _i37.TvDatabaseHelper {
  MockTvDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i36.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i11.Future<_i36.Database?>.value(),
          )
          as _i11.Future<_i36.Database?>);

  @override
  _i11.Future<void> insertCacheTransaction(
    List<_i10.TvTable>? tvs,
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCacheTransaction, [tvs, category]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<List<Map<String, dynamic>>> getCacheTvs(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getCacheTvs, [category]),
            returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i11.Future<List<Map<String, dynamic>>>);

  @override
  _i11.Future<int> clearCache(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, [category]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<int> insertWatchlist(_i10.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<int> removeWatchlist(_i10.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i11.Future<Map<String, dynamic>?>.value(),
          )
          as _i11.Future<Map<String, dynamic>?>);

  @override
  _i11.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i11.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetPopularTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTv extends _i1.Mock implements _i10.GetPopularTv {
  MockGetPopularTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_2(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i4.TvRepository);

  @override
  _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>.value(
                  _FakeEither_1<_i12.Failure, List<_i14.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i11.Future<_i3.Either<_i12.Failure, List<_i14.Tv>>>);
}

/// A class which mocks [DataConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataConnectionChecker extends _i1.Mock
    implements _i7.DataConnectionChecker {
  MockDataConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i7.AddressCheckOptions> get addresses =>
      (super.noSuchMethod(
            Invocation.getter(#addresses),
            returnValue: <_i7.AddressCheckOptions>[],
          )
          as List<_i7.AddressCheckOptions>);

  @override
  Duration get checkInterval =>
      (super.noSuchMethod(
            Invocation.getter(#checkInterval),
            returnValue: _FakeDuration_5(
              this,
              Invocation.getter(#checkInterval),
            ),
          )
          as Duration);

  @override
  List<_i7.AddressCheckResult> get lastTryResults =>
      (super.noSuchMethod(
            Invocation.getter(#lastTryResults),
            returnValue: <_i7.AddressCheckResult>[],
          )
          as List<_i7.AddressCheckResult>);

  @override
  _i11.Future<bool> get hasConnection =>
      (super.noSuchMethod(
            Invocation.getter(#hasConnection),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<_i7.DataConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
            Invocation.getter(#connectionStatus),
            returnValue: _i11.Future<_i7.DataConnectionStatus>.value(
              _i7.DataConnectionStatus.disconnected,
            ),
          )
          as _i11.Future<_i7.DataConnectionStatus>);

  @override
  _i11.Stream<_i7.DataConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
            Invocation.getter(#onStatusChange),
            returnValue: _i11.Stream<_i7.DataConnectionStatus>.empty(),
          )
          as _i11.Stream<_i7.DataConnectionStatus>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  bool get isActivelyChecking =>
      (super.noSuchMethod(
            Invocation.getter(#isActivelyChecking),
            returnValue: false,
          )
          as bool);

  @override
  set addresses(List<_i7.AddressCheckOptions>? _addresses) =>
      super.noSuchMethod(
        Invocation.setter(#addresses, _addresses),
        returnValueForMissingStub: null,
      );

  @override
  set checkInterval(Duration? _checkInterval) => super.noSuchMethod(
    Invocation.setter(#checkInterval, _checkInterval),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<_i7.AddressCheckResult> isHostReachable(
    _i7.AddressCheckOptions? options,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isHostReachable, [options]),
            returnValue: _i11.Future<_i7.AddressCheckResult>.value(
              _FakeAddressCheckResult_6(
                this,
                Invocation.method(#isHostReachable, [options]),
              ),
            ),
          )
          as _i11.Future<_i7.AddressCheckResult>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i8.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i8.IOStreamedResponse> send(_i38.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i11.Future<_i8.IOStreamedResponse>.value(
              _FakeIOStreamedResponse_7(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i11.Future<_i8.IOStreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<_i9.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<_i9.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<_i9.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i39.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<_i9.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i39.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<_i9.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i39.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<_i9.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i39.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i11.Future<_i9.Response>.value(
              _FakeResponse_8(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i11.Future<_i9.Response>);

  @override
  _i11.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i11.Future<String>.value(
              _i40.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<_i41.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i11.Future<_i41.Uint8List>.value(_i41.Uint8List(0)),
          )
          as _i11.Future<_i41.Uint8List>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSourceImpl extends _i1.Mock
    implements _i17.MovieRemoteDataSource {
  MockMovieRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i18.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<_i5.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i11.Future<_i5.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_3(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i11.Future<_i5.MovieDetailResponse>);

  @override
  _i11.Future<List<_i18.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);

  @override
  _i11.Future<List<_i18.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i11.Future<List<_i18.MovieModel>>.value(
              <_i18.MovieModel>[],
            ),
          )
          as _i11.Future<List<_i18.MovieModel>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSourceImpl extends _i1.Mock
    implements _i19.TvRemoteDataSource {
  MockTvRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i20.TvModel>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<_i6.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i11.Future<_i6.TvDetailResponse>.value(
              _FakeTvDetailResponse_4(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i11.Future<_i6.TvDetailResponse>);

  @override
  _i11.Future<List<_i20.TvModel>> searchTv(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);

  @override
  _i11.Future<List<_i20.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i11.Future<List<_i20.TvModel>>.value(
              <_i20.TvModel>[],
            ),
          )
          as _i11.Future<List<_i20.TvModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i42.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<void> cacheNowPlayingMovies(List<_i10.MovieTable>? movies) =>
      (super.noSuchMethod(
            Invocation.method(#cacheNowPlayingMovies, [movies]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<List<_i10.MovieTable>> getCachedNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedNowPlayingMovies, []),
            returnValue: _i11.Future<List<_i10.MovieTable>>.value(
              <_i10.MovieTable>[],
            ),
          )
          as _i11.Future<List<_i10.MovieTable>>);

  @override
  _i11.Future<String> insertWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i11.Future<String>.value(
              _i40.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [movie]),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<String> removeWatchlist(_i10.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i11.Future<String>.value(
              _i40.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<_i10.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i11.Future<_i10.MovieTable?>.value(),
          )
          as _i11.Future<_i10.MovieTable?>);

  @override
  _i11.Future<List<_i10.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i11.Future<List<_i10.MovieTable>>.value(
              <_i10.MovieTable>[],
            ),
          )
          as _i11.Future<List<_i10.MovieTable>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i43.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<void> cacheOnTheAirTv(List<_i10.TvTable>? tvs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheOnTheAirTv, [tvs]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<List<_i10.TvTable>> getCachedOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedOnTheAirTv, []),
            returnValue: _i11.Future<List<_i10.TvTable>>.value(
              <_i10.TvTable>[],
            ),
          )
          as _i11.Future<List<_i10.TvTable>>);

  @override
  _i11.Future<String> insertWatchlist(_i10.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i11.Future<String>.value(
              _i40.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [tv]),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<String> removeWatchlist(_i10.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i11.Future<String>.value(
              _i40.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i11.Future<String>);

  @override
  _i11.Future<_i10.TvTable?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i11.Future<_i10.TvTable?>.value(),
          )
          as _i11.Future<_i10.TvTable?>);

  @override
  _i11.Future<List<_i10.TvTable>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i11.Future<List<_i10.TvTable>>.value(
              <_i10.TvTable>[],
            ),
          )
          as _i11.Future<List<_i10.TvTable>>);
}
