// Mocks generated by Mockito 5.4.6 from annotations
// in ditonton_submission1/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i41;
import 'dart:typed_data' as _i43;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton_submission1/core/error/failure.dart' as _i9;
import 'package:ditonton_submission1/core/error/network_info.dart' as _i18;
import 'package:ditonton_submission1/data/datasources/db/movie_database_helper.dart'
    as _i36;
import 'package:ditonton_submission1/data/datasources/db/tv_database_helper.dart'
    as _i39;
import 'package:ditonton_submission1/data/datasources/movie_local_data_source.dart'
    as _i44;
import 'package:ditonton_submission1/data/datasources/movie_remote_data_source.dart'
    as _i14;
import 'package:ditonton_submission1/data/datasources/tv_local_data_source.dart'
    as _i45;
import 'package:ditonton_submission1/data/datasources/tv_remote_data_source.dart'
    as _i16;
import 'package:ditonton_submission1/data/models/movie_detail_model.dart'
    as _i3;
import 'package:ditonton_submission1/data/models/movie_model.dart' as _i15;
import 'package:ditonton_submission1/data/models/movie_table.dart' as _i38;
import 'package:ditonton_submission1/data/models/tv_detail_model.dart' as _i4;
import 'package:ditonton_submission1/data/models/tv_model.dart' as _i17;
import 'package:ditonton_submission1/data/models/tv_table.dart' as _i40;
import 'package:ditonton_submission1/domain/entities/movie.dart' as _i10;
import 'package:ditonton_submission1/domain/entities/movie_detail.dart' as _i11;
import 'package:ditonton_submission1/domain/entities/tv.dart' as _i12;
import 'package:ditonton_submission1/domain/entities/tv_detail.dart' as _i13;
import 'package:ditonton_submission1/domain/repositories/movie_repository.dart'
    as _i5;
import 'package:ditonton_submission1/domain/repositories/tv_repository.dart'
    as _i6;
import 'package:ditonton_submission1/domain/usecases/get_movie_detail.dart'
    as _i22;
import 'package:ditonton_submission1/domain/usecases/get_movie_recommendations.dart'
    as _i23;
import 'package:ditonton_submission1/domain/usecases/get_now_playing_movies.dart'
    as _i19;
import 'package:ditonton_submission1/domain/usecases/get_on_the_air_tv.dart'
    as _i31;
import 'package:ditonton_submission1/domain/usecases/get_popular_movies.dart'
    as _i20;
import 'package:ditonton_submission1/domain/usecases/get_popular_tv.dart'
    as _i32;
import 'package:ditonton_submission1/domain/usecases/get_top_rated_movies.dart'
    as _i21;
import 'package:ditonton_submission1/domain/usecases/get_top_rated_tv.dart'
    as _i33;
import 'package:ditonton_submission1/domain/usecases/get_tv_detail.dart'
    as _i34;
import 'package:ditonton_submission1/domain/usecases/get_tv_recommendations.dart'
    as _i35;
import 'package:ditonton_submission1/domain/usecases/get_watchlist_movies.dart'
    as _i27;
import 'package:ditonton_submission1/domain/usecases/get_watchlist_status_movie.dart'
    as _i24;
import 'package:ditonton_submission1/domain/usecases/get_watchlist_tv.dart'
    as _i28;
import 'package:ditonton_submission1/domain/usecases/remove_watchlist_movie.dart'
    as _i26;
import 'package:ditonton_submission1/domain/usecases/save_watchlist_movie.dart'
    as _i25;
import 'package:ditonton_submission1/domain/usecases/search_movies.dart'
    as _i29;
import 'package:ditonton_submission1/domain/usecases/search_tv.dart' as _i30;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i42;
import 'package:sqflite/sqflite.dart' as _i37;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvDetailResponse_2 extends _i1.SmartFake
    implements _i4.TvDetailResponse {
  _FakeTvDetailResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieRepository_3 extends _i1.SmartFake
    implements _i5.MovieRepository {
  _FakeMovieRepository_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvRepository_4 extends _i1.SmartFake implements _i6.TvRepository {
  _FakeTvRepository_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i5.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getWatchlistMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i6.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#getOnTheAirTv, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#getPopularTv, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#getTopRatedTv, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i13.TvDetail>(
                    this,
                    Invocation.method(#getTvDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> getTvRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#getTvRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> searchTv(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#searchTv, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> getWatchlistTv() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTv, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#getWatchlistTv, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i13.TvDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [tv]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i13.TvDetail? tv,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i8.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i3.MovieDetailResponse>);

  @override
  _i8.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i16.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i17.TvModel>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<_i4.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i8.Future<_i4.TvDetailResponse>.value(
              _FakeTvDetailResponse_2(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.TvDetailResponse>);

  @override
  _i8.Future<List<_i17.TvModel>> searchTv(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i18.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i19.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i20.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i21.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i22.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i23.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetWatchListStatusMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusMovie extends _i1.Mock
    implements _i24.GetWatchListStatusMovie {
  MockGetWatchListStatusMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);
}

/// A class which mocks [SaveWatchlistMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistMovie extends _i1.Mock
    implements _i25.SaveWatchlistMovie {
  MockSaveWatchlistMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistMovie extends _i1.Mock
    implements _i26.RemoveWatchlistMovie {
  MockRemoveWatchlistMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i27.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetWatchListTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListTv extends _i1.Mock implements _i28.GetWatchListTv {
  MockGetWatchListTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i29.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [SearchTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTv extends _i1.Mock implements _i30.SearchTv {
  MockSearchTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [GetOnTheAirTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTv extends _i1.Mock implements _i31.GetOnTheAirTv {
  MockGetOnTheAirTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [GetPopularTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTv extends _i1.Mock implements _i32.GetPopularTv {
  MockGetPopularTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [GetTopRatedTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTv extends _i1.Mock implements _i33.GetTopRatedTv {
  MockGetTopRatedTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i34.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i13.TvDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i13.TvDetail>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i35.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TvRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTvRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TvRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i12.Tv>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i12.Tv>>>);
}

/// A class which mocks [MovieDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDatabaseHelper extends _i1.Mock
    implements _i36.MovieDatabaseHelper {
  MockMovieDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i37.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i8.Future<_i37.Database?>.value(),
          )
          as _i8.Future<_i37.Database?>);

  @override
  _i8.Future<void> insertCacheTransaction(
    List<_i38.MovieTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCacheTransaction, [movies, category]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getCacheMovies, [category]),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<int> clearCache(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, [category]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> insertWatchlist(_i38.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeWatchlist(_i38.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDatabaseHelper extends _i1.Mock implements _i39.TvDatabaseHelper {
  MockTvDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i37.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i8.Future<_i37.Database?>.value(),
          )
          as _i8.Future<_i37.Database?>);

  @override
  _i8.Future<void> insertCacheTransaction(
    List<_i40.TvTable>? tvs,
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#insertCacheTransaction, [tvs, category]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getCacheTvs(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getCacheTvs, [category]),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<int> clearCache(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, [category]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> insertWatchlist(_i40.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeWatchlist(_i40.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<Map<String, dynamic>?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i7.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i7.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i41.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i41.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i41.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i41.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i8.Future<String>.value(
              _i42.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i43.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i8.Future<_i43.Uint8List>.value(_i43.Uint8List(0)),
          )
          as _i8.Future<_i43.Uint8List>);

  @override
  _i8.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i8.Future<_i7.StreamedResponse>.value(
              _FakeStreamedResponse_6(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i8.Future<_i7.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSourceImpl extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i8.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i3.MovieDetailResponse>);

  @override
  _i8.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);

  @override
  _i8.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i8.Future<List<_i15.MovieModel>>.value(
              <_i15.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSourceImpl extends _i1.Mock
    implements _i16.TvRemoteDataSource {
  MockTvRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i17.TvModel>> getOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getPopularTv() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getTopRatedTv() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTv, []),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<_i4.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvDetail, [id]),
            returnValue: _i8.Future<_i4.TvDetailResponse>.value(
              _FakeTvDetailResponse_2(
                this,
                Invocation.method(#getTvDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.TvDetailResponse>);

  @override
  _i8.Future<List<_i17.TvModel>> searchTv(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTv, [query]),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);

  @override
  _i8.Future<List<_i17.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvRecommendations, [id]),
            returnValue: _i8.Future<List<_i17.TvModel>>.value(<_i17.TvModel>[]),
          )
          as _i8.Future<List<_i17.TvModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i44.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> cacheNowPlayingMovies(List<_i38.MovieTable>? movies) =>
      (super.noSuchMethod(
            Invocation.method(#cacheNowPlayingMovies, [movies]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<List<_i38.MovieTable>> getCachedNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedNowPlayingMovies, []),
            returnValue: _i8.Future<List<_i38.MovieTable>>.value(
              <_i38.MovieTable>[],
            ),
          )
          as _i8.Future<List<_i38.MovieTable>>);

  @override
  _i8.Future<String> insertWatchlist(_i38.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i42.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i38.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i42.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i38.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<_i38.MovieTable?>.value(),
          )
          as _i8.Future<_i38.MovieTable?>);

  @override
  _i8.Future<List<_i38.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<_i38.MovieTable>>.value(
              <_i38.MovieTable>[],
            ),
          )
          as _i8.Future<List<_i38.MovieTable>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i45.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> cacheOnTheAirTv(List<_i40.TvTable>? tvs) =>
      (super.noSuchMethod(
            Invocation.method(#cacheOnTheAirTv, [tvs]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<List<_i40.TvTable>> getCachedOnTheAirTv() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedOnTheAirTv, []),
            returnValue: _i8.Future<List<_i40.TvTable>>.value(<_i40.TvTable>[]),
          )
          as _i8.Future<List<_i40.TvTable>>);

  @override
  _i8.Future<String> insertWatchlist(_i40.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tv]),
            returnValue: _i8.Future<String>.value(
              _i42.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i40.TvTable? tv) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tv]),
            returnValue: _i8.Future<String>.value(
              _i42.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [tv]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i40.TvTable?> getTvById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTvById, [id]),
            returnValue: _i8.Future<_i40.TvTable?>.value(),
          )
          as _i8.Future<_i40.TvTable?>);

  @override
  _i8.Future<List<_i40.TvTable>> getWatchlistTvs() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTvs, []),
            returnValue: _i8.Future<List<_i40.TvTable>>.value(<_i40.TvTable>[]),
          )
          as _i8.Future<List<_i40.TvTable>>);
}
